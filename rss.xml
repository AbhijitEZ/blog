<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blogs]]></title><description><![CDATA[Techincal Blog that covers programming stuffs.]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 05 Nov 2021 18:00:38 GMT</lastBuildDate><item><title><![CDATA[Docker for absolute beginner]]></title><description><![CDATA[What docker solves? Docker help in creating the virtual container on any OS inside our local machine. There are already other alternative
as…]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io/docker-beginner/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/docker-beginner/</guid><pubDate>Fri, 05 Nov 2021 23:04:03 GMT</pubDate><content:encoded>&lt;h2&gt;What docker solves?&lt;/h2&gt;
&lt;p&gt;Docker help in creating the virtual container on any OS inside our local machine. There are already other alternative
as well like VirtualBox, VMWare and so on but docker surpress all of them. Due to its core customization over OS and functionality.
So important concepts related to Docker are as follow.&lt;/p&gt;
&lt;h3&gt;Container&lt;/h3&gt;
&lt;p&gt;They are the building block of docker, think of it as a virtual box completely isolated from outer where it’s job is only to do things it has
been tasked with.&lt;/p&gt;
&lt;h3&gt;Images&lt;/h3&gt;
&lt;p&gt;Images are the blueprint of container. Container are created from images, for eg: an object is created from class where, Image === class.&lt;/p&gt;
&lt;h3&gt;Volumes&lt;/h3&gt;
&lt;p&gt;In docker volumes stores the container data in the local machine in order to save the data even when container service is down, Most usefull
eg is DB data needs to mounted to local machine in order to keep the track of data on container stop.&lt;/p&gt;
&lt;h3&gt;Dockerfile&lt;/h3&gt;
&lt;p&gt;This is the main file which would be used to create a Docker Image. Most of the os | language | services are supported by this file.&lt;/p&gt;
&lt;h3&gt;Docker Compose&lt;/h3&gt;
&lt;p&gt;This docker compose as a controller of many containers. It can be used to connect all the container within same network, get other container
data and so on. Not used much in production&lt;/p&gt;
&lt;h3&gt;Inner keywords used in docker&lt;/h3&gt;
&lt;h4&gt;Publish Ports&lt;/h4&gt;
&lt;p&gt;They allow to listen the container port with outside machine &lt;code class=&quot;language-text&quot;&gt;80:8080&lt;/code&gt; where &lt;strong&gt;80&lt;/strong&gt; is local-machine port mapped to &lt;strong&gt;8080&lt;/strong&gt; of container.
Published ports can be accessible by external containers and services&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;docker&quot;&gt;&lt;pre class=&quot;language-docker&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;p 80&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;8080&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Expose&lt;/h4&gt;
&lt;p&gt;Expose tell the container listens on the stated port during runtime. By default, the EXPOSE instruction does not expose the container’s ports
to be accessible from the host. In other words, it only makes the stated ports available for inter-container interaction.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;docker&quot;&gt;&lt;pre class=&quot;language-docker&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;EXPOSE&lt;/span&gt; 8080&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Postgres inside docker]]></title><description><![CDATA[Docker Docker is containerized approach in the current web market, where we can deploy
out application on any cloud wihtout much effort…]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io/docker-postgres/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/docker-postgres/</guid><pubDate>Tue, 29 Jun 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h2&gt;Docker&lt;/h2&gt;
&lt;p&gt;Docker is containerized approach in the current web market, where we can deploy
out application on any cloud wihtout much effort. Most of cloub companies like AWS,
GCD, etc already have sevice for docker and container.&lt;/p&gt;
&lt;h3&gt;What are container?&lt;/h3&gt;
&lt;p&gt;Container are virutal os inside main system as Virtual system but much fast and stable
compared to other VMs. Docker Image are the blueprint which is used to created the
container, they are like the class (Image) and its object (Container).&lt;/p&gt;
&lt;h2&gt;Postgres&lt;/h2&gt;
&lt;p&gt;Postgres is relation database used mostly these days. It’s fast, efficient and developer friendly
I usually prefer postgres with respect to other dbs. There are other great alternatives as well
like Mysql and so on.&lt;/p&gt;
&lt;h2&gt;Docker Compose&lt;/h2&gt;
&lt;p&gt;Docker compose allows to start multiple images/container in same instances and also allow communication
between them.&lt;/p&gt;
&lt;h2&gt;Docker Compose for postgres with pg-admin interface&lt;/h2&gt;
&lt;p&gt;We are going to create the postgres docker compose file with pg-admin interface.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yml&quot;&gt;&lt;pre class=&quot;language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;3.8&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pg_container
    &lt;span class=&quot;token key atrule&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; postgres
    &lt;span class=&quot;token key atrule&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; always
    &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;POSTGRES_USER&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; root
      &lt;span class=&quot;token key atrule&quot;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; root
      &lt;span class=&quot;token key atrule&quot;&gt;POSTGRES_DB&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test_db
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;5432:5432&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; ./postgres&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/var/lib/postgresql/data
  &lt;span class=&quot;token key atrule&quot;&gt;pgadmin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pgadmin4_container
    &lt;span class=&quot;token key atrule&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; dpage/pgadmin4
    &lt;span class=&quot;token key atrule&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; always
    &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;PGADMIN_DEFAULT_EMAIL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; admin@admin.com
      &lt;span class=&quot;token key atrule&quot;&gt;PGADMIN_DEFAULT_PASSWORD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; root
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;5050:80&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[React Hooks]]></title><description><![CDATA[React one of the important and most used Frontend Framework in the web
development for past few years. React Class based component In the…]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io/react-hooks/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/react-hooks/</guid><pubDate>Sat, 19 Jun 2021 17:40:32 GMT</pubDate><content:encoded>&lt;p&gt;React one of the important and most used Frontend Framework in the web
development for past few years.&lt;/p&gt;
&lt;h2&gt;React Class based component&lt;/h2&gt;
&lt;p&gt;In the earlier version of the react, &lt;code class=&quot;language-text&quot;&gt;Class&lt;/code&gt; Based component was used. The downside
of this approach was the initial boilerplate of code was way to much bigger, and debug
was harder. Now days React Class based component is totally outdated and nobody uses it
in the newer projects.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// States for the component&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;Too much Code&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;React Function component&lt;/h2&gt;
&lt;p&gt;Functional component has way to much less initial codebase compared to class and is also more
readable.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;Hurray!!!&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;React Hooks&lt;/h2&gt;
&lt;p&gt;Hooks are regular function specific to react that provide component functionality based on the
use-case. Hooks can be used as life-cycle methods or custom-hooks have custom logic.
Some of the most common hooks that are used in react&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;useState&lt;/strong&gt; Create the state and update state function&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;useEffect&lt;/strong&gt; Lifecycle method can we defined for &lt;code class=&quot;language-text&quot;&gt;mount&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;update&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;unmount&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;useRef&lt;/strong&gt; To get the reference of the node or current node state.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;React Custom Hooks&lt;/h3&gt;
&lt;p&gt;If one needs to create his/her own custom hooks it needs to start with &lt;code class=&quot;language-text&quot;&gt;use&lt;/code&gt; in the
function name.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;useDateToAdd&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; updatedValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useMemo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Some computation&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; value &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; updatedValue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Nodejs Advantages!]]></title><description><![CDATA[Nodejs ? Nodejs is event-driven, asynchronous programming language which is used widely these days.
Nodejs runs of the V8 engine that is…]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io/nodejs-advantages/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/nodejs-advantages/</guid><pubDate>Fri, 28 May 2021 23:46:37 GMT</pubDate><content:encoded>&lt;h2&gt;Nodejs ?&lt;/h2&gt;
&lt;p&gt;Nodejs is event-driven, asynchronous programming language which is used widely these days.
Nodejs runs of the V8 engine that is used in Google chrome. So we have the same language we
use in browser on out machine, Javascript. ✨&lt;/p&gt;
&lt;h2&gt;Nodejs Advantages&lt;/h2&gt;
&lt;p&gt;There are many advantanges for nodejs listing some of the main ones.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Asynchronous&lt;/strong&gt; -&gt; Makes the thread doesnot stop for jumping in case of async operations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Event Driven&lt;/strong&gt; -&gt; Entire Nodejs is based on that, every trigger in event would have a listener.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mircro-services&lt;/strong&gt; -&gt; Very easy to implement and scale.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RealTime Web app&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Chat programs&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Social media apps&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multiplayer games&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>